name: Deploy Session Production
on:
  push:
    branches:
    - main
env:
  enviromentName: pro
jobs:
  Infra:
    runs-on: ubuntu-latest
    environment:
      name: pro
      url: https://d3ri3uhvzvztpt.cloudfront.net/
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      #- name: CloudFormation
      #  run: |
      #      aws cloudformation update-stack --stack-name PhotoEvents-Session --capabilities CAPABILITY_NAMED_IAM --template-body file://./infraSession.yml \
      #      --parameters \
      #      ParameterKey=LambdaFuncName,ParameterValue=${{ secrets.LAMBDAFUNCNAME }} \
      #      ParameterKey=CognitoARN,ParameterValue='arn:aws:cognito-idp:us-west-2:547749462802:userpool/us-west-2_VCd4MZ9X8' \
      #      ParameterKey=EnvironmentName,ParameterValue=$enviromentName
      - name: Deploying Stack 
        run: |
          sleep 1m
      #- name: Complete STACK
      #  run: |
      #    aws cloudformation wait stack-create-complete \
      #    --stack-name ${{steps.CloudFormation.outputs.stackID}}
  Deployment:
    needs: Infra
    runs-on: ubuntu-latest
    environment:
      name: pro
      url: https://d3ri3uhvzvztpt.cloudfront.net/
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Build
        run: |
          npm install
      - name: Deploy
        run: |
          zip -r deploy.zip ./
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDAFUNCNAME }} \
            --zip-fil "fileb://./deploy.zip" \
            --region ${{ secrets.AWS_REGION }} \